accessWidener v2 named

accessible class net/minecraft/entity/projectile/FishingBobberEntity$PositionType
accessible class net/minecraft/entity/projectile/FishingBobberEntity$State

accessible method net/minecraft/entity/projectile/FishingBobberEntity checkForCollision ()V
accessible method net/minecraft/entity/projectile/FishingBobberEntity updateHookedEntityId (Lnet/minecraft/entity/Entity;)V
accessible method net/minecraft/entity/projectile/FishingBobberEntity tickFishingLogic (Lnet/minecraft/util/math/BlockPos;)V
accessible method net/minecraft/entity/projectile/FishingBobberEntity isOpenOrWaterAround (Lnet/minecraft/util/math/BlockPos;)Z

accessible field net/minecraft/entity/projectile/FishingBobberEntity luckOfTheSeaLevel I
accessible field net/minecraft/entity/projectile/FishingBobberEntity caughtFish Z
accessible field net/minecraft/entity/projectile/FishingBobberEntity removalTimer I
accessible field net/minecraft/entity/projectile/FishingBobberEntity velocityRandom Lnet/minecraft/util/math/random/Random;
accessible field net/minecraft/entity/projectile/FishingBobberEntity fishTravelCountdown I
accessible field net/minecraft/entity/projectile/FishingBobberEntity inOpenWater Z
accessible field net/minecraft/entity/projectile/FishingBobberEntity hookedEntity Lnet/minecraft/entity/Entity;
accessible field net/minecraft/entity/projectile/FishingBobberEntity outOfOpenWaterTicks I
accessible field net/minecraft/entity/projectile/FishingBobberEntity hookCountdown I
accessible field net/minecraft/entity/projectile/FishingBobberEntity state Lnet/minecraft/entity/projectile/FishingBobberEntity$State;